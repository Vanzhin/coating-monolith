name: Build and Push Docker Images

on:
  push:
    tags:
      - '*'  # Запускается только при создании тега, начинающегося с 'v'
    branches:
      - main  # Также запускается на push в main (для тестирования сборки)
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vanzhin/coating-monolith

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Собираем только если это тег или push в main/develop
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        service: [php-fpm, php-cli, supervisor]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            INSTALL_XDEBUG=${{ vars.INSTALL_XDEBUG }}
            APP_SECRET=${{ secrets.APP_SECRET }}
            APP_NAME=${{ vars.APP_NAME }}
            DEFAULT_FROM_ADDR=${{ vars.DEFAULT_FROM_ADDR }}
            DEFAULT_FROM_NAME=${{ vars.DEFAULT_FROM_NAME }}
            MAILER_DSN=${{ vars.MAILER_DSN }}
            JWT_SECRET_KEY=${{ vars.JWT_SECRET_KEY }}
            JWT_PUBLIC_KEY=${{ vars.JWT_PUBLIC_KEY }}
            JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}
            LOG_TELEGRAM_BOT_KEY=${{ secrets.LOG_TELEGRAM_BOT_KEY }}
            LOG_TELEGRAM_CHANNEL=${{ vars.LOG_TELEGRAM_CHANNEL }}
            DB_HOST=${{ vars.DB_HOST }}
            DB_PORT=${{ vars.DB_PORT }}
            DB_NAME=${{ vars.DB_NAME }}
            DB_USER=${{ vars.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            REDIS_HOST=${{ vars.REDIS_HOST }}
            ELASTIC_DSN=${{ vars.ELASTIC_DSN }}
            ELASTIC_USERNAME=${{ vars.ELASTIC_USERNAME }}
            ELASTIC_PASSWORD=${{ secrets.ELASTIC_PASSWORD }}


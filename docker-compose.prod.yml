services:
  manager_php-fpm:
    image: ${REGISTRY}/${IMAGE_NAME}-php-fpm:${IMAGE_TAG:-latest}
    build:
      context: docker/php-fpm
      dockerfile: Dockerfile
    environment:
      - APP_ENV=prod
      - APP_DEBUG=0
    volumes:
      - ./app:/app:rw
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy

  manager_supervisor:
    image: ${REGISTRY}/${IMAGE_NAME}-supervisor:${IMAGE_TAG:-latest}
    build:
      context: docker/supervisor
      dockerfile: Dockerfile
    restart: always
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    command: bash -c "/usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf"
    volumes:
      - ./app:/app:rw
      - ./docker/supervisor/conf.d:/etc/supervisor/conf.d
      - ./docker/supervisor/log:/var/log/supervisor

  manager_php-cli:
    image: ${REGISTRY}/${IMAGE_NAME}-php-cli:${IMAGE_TAG:-latest}
    build:
      context: docker/php-cli
      dockerfile: Dockerfile
    command: php bin/console --no-interaction doctrine:migrations:migrate
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    volumes:
      - ./app:/app:rw

  manager_nginx:
    hostname: ${DOMAIN}
    image: nginx:1.25.4
    depends_on:
      - manager_php-fpm
    volumes:
      - ./app:/app:rw
      - ./docker/nginx/logs:/var/log/nginx:rw
      - ./docker/nginx/hosts:/etc/nginx/conf.d
    networks:
      default:
        ipv4_address: ${HOST_NGINX}

  manager_redis:
    image: redis:7.2.1-alpine
    restart: always
    volumes:
      - redis_data:/data

  manager_db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      timeout: 45s
      interval: 10s
      retries: 10

  elasticsearch:
    image: elasticsearch:9.0.1
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 4GB
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

volumes:
  db_data:
  redis_data:
  elasticsearch_data:

networks:
  default:
    ipam:
      config:
        - subnet: ${NETWORK}

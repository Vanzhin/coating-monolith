services:

  manager_php-fpm:
    hostname: ${DOMAIN}
    image: ${REGISTRY}/${IMAGE_NAME}-php-fpm:${IMAGE_TAG:-latest}
    volumes:
      - ./app:/app
    environment:
      - APP_ENV=prod
      - APP_DEBUG=0
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy

  manager_supervisor:
    hostname: ${DOMAIN}
    working_dir: /app
    image: ${REGISTRY}/${IMAGE_NAME}-supervisor:${IMAGE_TAG:-latest}
    environment:
      - APP_ENV=prod
      - APP_DEBUG=0
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
    restart: always
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    command: bash -c "/usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf"

  manager_php-cli:
    hostname: ${DOMAIN}
    working_dir: /app
    image: ${REGISTRY}/${IMAGE_NAME}-php-cli:${IMAGE_TAG:-latest}
    environment:
      - APP_ENV=prod
      - APP_DEBUG=0
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
    command: php bin/console --no-interaction doctrine:migrations:migrate
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy

  manager_nginx:
    hostname: ${DOMAIN}
    image: nginx:1.25.4
    depends_on:
      - manager_php-fpm
    volumes:
      - ./app:/app:ro
      - ./docker/nginx/logs:/var/log/nginx:rw
      - ./docker/nginx/hosts:/etc/nginx/conf.d
    networks:
      default:
        ipv4_address: ${HOST_NGINX}

  manager_redis:
    hostname: ${DOMAIN}
    working_dir: /app
    image: redis:7.2.1
    restart: always
    volumes:
      - redis_data:/data

  manager_db:
    image: postgres:17-alpine
    shm_size: 128mb
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - ${DB_EXTERNAL_PORT}:5432
    command: [ "postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/lib/postgresql/data/pg_log", "-c", "log_filename=postgresql.log", "-c", "log_statement=all" ]

  elasticsearch:
    container_name: ${ELASTIC_CONTAINER_NAME}
    image: elasticsearch:9.0.1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 4GB

volumes:
  db_data:
  redis_data:
  elasticsearch_data:

networks:
  default:
    ipam:
      config:
        - subnet: ${NETWORK}
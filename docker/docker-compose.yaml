version: '3.9'

services:

  manager_php-fpm:
    hostname: ${DOMAIN}
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
      args:
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
    ports:
      - '9010:9010'
    volumes:
      - ./../app:/app:rw
    networks:
      - app-network
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    working_dir: /app

  manager_supervisor:
    hostname: ${DOMAIN}
    working_dir: /app
    build:
      context: ./supervisor
      dockerfile: Dockerfile
    restart: always
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    command: bash -c "/usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf"
    volumes:
      - ./../app:/app:rw
      - ./supervisor/conf.d:/etc/supervisor/conf.d
      - ./supervisor/log:/var/log/supervisor
    networks:
      - app-network

  manager_php-cli:
    hostname: ${DOMAIN}
    working_dir: /app
    build:
      context: ./php-cli
      dockerfile: Dockerfile
    command: bash -c "composer install && php bin/console --no-interaction doctrine:migrations:migrate"
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    volumes:
      - ./../app:/app:rw
    networks:
      - app-network

  manager_nginx:
    hostname: ${DOMAIN}
    image: nginx:1.25.4
    ports:
      - "80:80"
      - "443:8443"
    networks:
      - app-network
    depends_on:
      - manager_php-fpm
    volumes:
      - ./../app:/app:rw
      - ./nginx/logs:/var/log/nginx:rw
      - ./nginx/hosts:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/ssl

  manager_redis:
    hostname: ${DOMAIN}
    working_dir: /app
    image: redis:7.2.1
    restart: always
    volumes:
      - ./redis/data/:/data:rw
    networks:
      - app-network

  manager_db:
    image: postgres:alpine
    shm_size: 128mb
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./db/data:/var/lib/postgresql/data
    ports:
      - ${DB_EXTERNAL_PORT}:5432
    command: [ "postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/lib/postgresql/data/pg_log", "-c", "log_filename=postgresql.log", "-c", "log_statement=all" ]
    networks:
      - app-network

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:v1.0.1
    restart: always
    ports:
      - "8025:8025"
      - "1025:1025"

    depends_on:
      - manager_php-fpm
      - manager_db
    networks:
      - app-network

volumes:
  nginx_log:
  app_log:
  db:
    driver: local
networks:
  app-network:
    driver: bridge
